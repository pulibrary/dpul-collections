version: 2.1

description: Common jobs for testing and building phoenix applications

executors:
  builder:
    docker:
      - image: cimg/elixir:1.17.2-erlang-26.2.1-browsers
        environment:
          TEST_POSTGRES_PORT: 5432
          TEST_POSTGRES_FIGGY_HOST: figgy_database
          SOLR_BASE_URL: http://localhost:8983
      - image: cimg/postgres:15.2
      - image: ghcr.io/pulibrary/dpul-collections:figgy-fixtures
        name: figgy_database
        environment:
          POSTGRES_PASSWORD: "postgres"
      - image: pulibrary/ci-solr:8.4-v1.0.0
        command: server/scripts/ci-start.sh
    working_directory: ~/project

commands:
  install-deps:
    description: Installs mix and npm dependencies
    parameters:
      include-assets:
        type: boolean
        default: true
    steps:
      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - restore_cache:
          keys:
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache
      - run:
          name: Install hex
          command: mix local.hex --force
      - run:
          name: Install rebar
          command: mix local.rebar --force
      - run:
          name: Install mix deps
          command: mix deps.get
      - when:
          condition: << parameters.include-assets >>
          steps:
            - run:
                name: Install npm deps
                command: npm install --prefix=./assets
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache
          paths: "deps"
      - save_cache:
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: v1-build-cache
          paths: "_build"

  mix-format:
    description: Validates code has been formatted with mix format
    steps:
      - run:
          name: Check elixir formatting
          command: mix format --check-formatted --dry-run

  mix-test:
    description: Runs all tests via mix
    steps:
      - run:
          name: Run tests
          command: MIX_ENV=test mix test

jobs:
  check-formatting:
    executor: builder
    steps:
      - checkout
      - install-deps:
          include-assets: false
      - mix-format

  run-unit-tests:
    executor: builder
    steps:
      - checkout
      - install-deps:
          include-assets: false
      - run: dockerize -wait tcp://localhost:8983 -timeout 1m
      - run:
          name: Load config into solr
          command: |
            cd solr/conf
            zip -1 -r solr_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://solr:SolrRocks@localhost:8983/solr/admin/configs?action=UPLOAD&name=dpul-collections"
            curl -X POST http://solr:SolrRocks@localhost:8983/api/collections/ -H 'Content-type: application/json' -d '{create: {name: dpulc1, config: dpul-collections, numShards: 1}}'
            curl -X POST http://solr:SolrRocks@localhost:8983/api/collections/ -H 'Content-type: application/json' -d '{create: {name: dpulc2, config: dpul-collections, numShards: 1}}'
            curl -X POST http://solr:SolrRocks@localhost:8983/api/c -H 'Content-Type: application/json' -d '{create-alias: {name: dpulc, collections:[dpulc1]}}'
      - mix-test
      - store_artifacts:
          path: cover
          destination: cover

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - check-formatting
      - run-unit-tests
